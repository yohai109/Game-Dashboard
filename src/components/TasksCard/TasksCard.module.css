/* Title with custom bullet point */
.title {
  display: flex;
  align-items: center;
  gap: var(--space-2);
  margin: 0;
}

.title::before {
  content: "";
  display: block;
  width: 12px;
  height: 12px;
  background-color: var(--color-primary);
  border-radius: 50%;
  flex-shrink: 0;
}

/* Tasks content */
.tasksContent {
  display: flex;
  flex-direction: column;
  gap: var(--space-3);
  flex: 1;
  overflow: hidden;
}

/* Input container */
.inputContainer {
  display: flex;
  gap: var(--space-2);
  margin-bottom: var(--space-3);
}

.meta {
  display: inline-flex;
  align-items: center;
  gap: var(--space-2);
  flex-shrink: 0;
}

.countBadge {
  font-size: var(--text-xs);
  color: var(--color-text-secondary);
  background: var(--color-bg-tertiary);
  border: 1px solid var(--color-border);
  padding: var(--space-1) var(--space-2);
  border-radius: var(--radius-full);
  font-weight: var(--font-medium);
  transition: all var(--transition-normal);
}

.countBadge:hover {
  background: var(--color-bg-secondary);
  color: var(--color-text-primary);
}

.clearButton {
  font-size: var(--text-xs);
  background: transparent;
  color: var(--color-text-secondary);
  border: 1px solid var(--color-border);
  padding: var(--space-1) var(--space-3);
  border-radius: var(--radius-full);
  cursor: pointer;
  transition: all var(--transition-normal);
  display: inline-flex;
  align-items: center;
  gap: var(--space-1);
  font-weight: var(--font-medium);
}

.clearButton:hover {
  color: var(--color-error);
  border-color: var(--color-error);
  background: var(--color-bg-tertiary);
  transform: translateY(-1px);
}

.clearButton:active {
  transform: translateY(0);
}

.inputContainer {
  display: grid;
  grid-template-columns: 1fr auto;
  gap: var(--space-2);
  margin: 0;
  padding: var(--space-3) 0 0;
  position: relative;
  margin-top: auto; /* Push input to bottom */
}

.input {
  background: var(--color-bg-tertiary);
  color: var(--color-text-primary);
  border: 1px solid var(--color-border);
  border-radius: var(--radius);
  padding: var(--space-2) var(--space-3);
  outline: none;
  transition: all var(--transition-normal);
  font-size: var(--text-sm);
  height: 40px;
  width: 100%;
}

.input::placeholder {
  color: var(--color-text-tertiary);
  opacity: 0.8;
}

.input:focus {
  border-color: var(--color-primary);
  box-shadow: 0 0 0 2px var(--color-primary-focus);
  background: var(--color-bg-secondary);
}

.addButton {
  background: var(--color-primary);
  color: var(--color-white);
  border: none;
  border-radius: var(--radius);
  padding: 0 var(--space-4);
  height: 40px;
  cursor: pointer;
  transition: all var(--transition-normal);
  font-size: var(--text-sm);
  font-weight: var(--font-medium);
  white-space: nowrap;
  display: inline-flex;
  align-items: center;
  justify-content: center;
  gap: var(--space-1);
}

.addButton:hover {
  background: var(--color-primary-dark);
  transform: translateY(-1px);
  box-shadow: var(--shadow-sm);
}

.addButton:active {
  transform: translateY(0);
  box-shadow: none;
}

.addButton:disabled {
  opacity: 0.5;
  cursor: not-allowed;
  background: var(--color-gray-600);
  transform: none !important;
  box-shadow: none !important;
}

.addButton::before {
  content: "+";
  font-size: var(--text-lg);
  line-height: 1;
  display: inline-block;
}

.taskList {
  list-style: none;
  margin: 0;
  padding: 0;
  display: flex;
  flex-direction: column;
  gap: var(--space-2);
  overflow-y: auto;
  flex: 1;
  min-height: 0;
  padding-right: var(--space-1);
  margin-bottom: var(--space-3);
  scrollbar-width: thin;
  scrollbar-color: var(--color-border) transparent;
  max-height: 300px;
}

.taskList::-webkit-scrollbar {
  width: 4px;
}

.taskList::-webkit-scrollbar-track {
  background: transparent;
}

.taskList::-webkit-scrollbar-thumb {
  background-color: var(--color-border);
  border-radius: var(--radius-full);
  opacity: 0.5;
}

.taskList::-webkit-scrollbar-thumb:hover {
  background-color: var(--color-text-tertiary);
}

.task {
  display: grid;
  grid-template-columns: auto 1fr auto;
  align-items: center;
  background: var(--color-bg-tertiary);
  border: 1px solid var(--color-border);
  border-radius: var(--radius);
  padding: var(--space-2) var(--space-3);
  transition: all var(--transition-normal);
  gap: var(--space-3);
  cursor: pointer;
  user-select: none;
  position: relative;
  overflow: hidden;
}

.task::before {
  content: "";
  position: absolute;
  left: 0;
  top: 0;
  bottom: 0;
  width: 3px;
  background: var(--color-primary);
  opacity: 0;
  transition: opacity var(--transition-normal);
}

.task:hover {
  border-color: var(--color-primary-light);
  background: var(--color-bg-secondary);
  transform: translateY(-1px);
  box-shadow: var(--shadow-sm);
}

.task:hover::before {
  opacity: 1;
}

.taskCheckbox {
  width: 18px;
  height: 18px;
  margin: 0;
  cursor: pointer;
  appearance: none;
  border-radius: var(--radius-sm);
  border: 2px solid var(--color-border);
  background: var(--color-bg-secondary);
  transition: all var(--transition-normal);
  position: relative;
  display: flex;
  align-items: center;
  justify-content: center;
  flex-shrink: 0;
}

.taskCheckbox:focus-visible {
  outline: 2px solid var(--color-primary);
  outline-offset: 2px;
}

.taskCheckbox:checked {
  background: var(--color-primary);
  border-color: var(--color-primary);
  background-image: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' fill='white'%3E%3Cpath d='M9 16.17L4.83 12l-1.42 1.41L9 19 21 7l-1.41-1.41L9 16.17z'/%3E%3C/svg%3E");
  background-position: center;
  background-repeat: no-repeat;
  background-size: 14px;
}

.taskCheckbox:focus-visible {
  outline: 2px solid var(--color-primary);
  outline-offset: 2px;
  box-shadow: 0 0 0 2px var(--color-primary-focus);
}

.taskLabel {
  color: var(--color-text-primary);
  user-select: none;
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
  font-size: var(--text-sm);
  transition: color var(--transition-normal);
  padding: var(--space-1) 0;
  position: relative;
  line-height: 1.4;
}

.task.done .taskLabel {
  color: var(--color-text-secondary);
  text-decoration: line-through;
  text-decoration-thickness: 1.5px;
  text-decoration-color: var(--color-text-tertiary);
}

.deleteButton {
  cursor: pointer;
  font-size: var(--text-base);
  line-height: 1;
  padding: var(--space-1);
  opacity: 0;
  transition: all var(--transition-normal);
  align-items: center;
  justify-content: center;
  width: 24px;
  height: 24px;
  border-radius: var(--radius-sm);
  flex-shrink: 0;
  background: none;
  border: none;
  color: var(--color-text-tertiary);
  margin: 0;
  display: inline-flex;
}

.task:hover .deleteButton,
.task:focus-within .deleteButton {
  opacity: 0.6;
}

.deleteButton:hover,
.deleteButton:focus-visible {
  color: var(--color-error);
  background: var(--color-bg-tertiary);
  opacity: 1 !important;
  transform: scale(1.1);
  outline: none;
}

.deleteButton:focus-visible {
  box-shadow: 0 0 0 2px var(--color-error);
}

.deleteButton:active {
  transform: scale(0.95);
}
/* Empty state styles */
.emptyState {
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  text-align: center;
  padding: var(--space-8) var(--space-4);
  color: var(--color-text-tertiary);
  flex: 1;
  gap: var(--space-2);
  border: 1px dashed var(--color-border);
  border-radius: var(--radius);
  margin: var(--space-2) 0;
  background: var(--color-bg-tertiary);
  transition: all var(--transition-normal);
}

.emptyStateIcon {
  font-size: var(--text-2xl);
  margin-bottom: var(--space-2);
  opacity: 0.7;
  transition: transform var(--transition-normal);
}

.emptyStateText {
  font-size: var(--text-sm);
  font-weight: var(--font-medium);
  color: var(--color-text-secondary);
  margin-bottom: var(--space-1);
}

.emptyStateHint {
  font-size: var(--text-xs);
  color: var(--color-text-tertiary);
  opacity: 0.8;
}

.emptyState:has(.emptyStateHint) {
  padding-bottom: var(--space-6);
}

/* Hover effect for empty state */
.emptyState:hover {
  border-color: var(--color-primary-light);
  background: var(--color-bg-secondary);
}

.emptyState:hover .emptyStateIcon {
  transform: translateY(-2px);
}

@media (max-width: 768px) {
  .tasksContent {
    padding: 0;
    gap: var(--space-3);
  }

  .header {
    flex-direction: column;
    align-items: flex-start;
    gap: var(--space-2);
    padding-bottom: var(--space-2);
  }

  .title {
    width: 100%;
    justify-content: space-between;
    font-size: var(--text-xs);
  }

  .meta {
    width: 100%;
    justify-content: space-between;
    margin-top: var(--space-1);
  }

  .inputContainer {
    grid-template-columns: 1fr;
    padding-top: var(--space-2);
    margin-top: var(--space-2);
    border-top: 1px solid var(--color-border);
  }

  .taskList {
    max-height: 40vh;
    padding-right: 2px;
  }

  .task {
    padding: var(--space-3);
  }

  .taskLabel {
    font-size: var(--text-sm);
  }

  .input {
    padding: var(--space-2) var(--space-3);
    font-size: var(--text-sm);
    min-height: 40px;
  }

  .addButton {
    padding: 0 var(--space-4);
    font-size: var(--text-sm);
    min-height: 40px;
  }
}

/* Compact view for smaller screens */
@media (max-height: 600px) {
  .taskList {
    max-height: 30vh;
  }

  .task {
    padding: var(--space-2);
  }

  .taskCheckbox {
    width: 16px;
    height: 16px;
  }

  .deleteButton {
    width: 20px;
    height: 20px;
  }

  .taskLabel {
    font-size: var(--text-xs);
    line-height: 1.4;
    padding: 0;
  }

  .emptyState {
    padding: var(--space-4) var(--space-2);
  }

  .emptyStateIcon {
    font-size: var(--text-xl);
    margin-bottom: var(--space-1);
  }

  .emptyStateText {
    font-size: var(--text-xs);
  }

  .emptyStateHint {
    font-size: 0.7rem;
  }
}
